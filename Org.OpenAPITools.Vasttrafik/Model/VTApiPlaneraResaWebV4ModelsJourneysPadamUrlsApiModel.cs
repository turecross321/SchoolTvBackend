/*
 * Planera Resa
 *
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.ComponentModel.DataAnnotations;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Deep links to open Padam app with specific trip
    /// </summary>
    [DataContract(Name = "VT.ApiPlaneraResa.Web.V4.Models.Journeys.PadamUrlsApiModel")]
    public partial class VTApiPlaneraResaWebV4ModelsJourneysPadamUrlsApiModel : IEquatable<VTApiPlaneraResaWebV4ModelsJourneysPadamUrlsApiModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VTApiPlaneraResaWebV4ModelsJourneysPadamUrlsApiModel" /> class.
        /// </summary>
        /// <param name="ios">iOS link.</param>
        /// <param name="android">Android link.</param>
        /// <param name="web">Web link.</param>
        public VTApiPlaneraResaWebV4ModelsJourneysPadamUrlsApiModel(string ios = default(string), string android = default(string), string web = default(string))
        {
            this.Ios = ios;
            this.Android = android;
            this.Web = web;
        }

        /// <summary>
        /// iOS link
        /// </summary>
        /// <value>iOS link</value>
        [DataMember(Name = "ios", EmitDefaultValue = true)]
        public string Ios { get; set; }

        /// <summary>
        /// Android link
        /// </summary>
        /// <value>Android link</value>
        [DataMember(Name = "android", EmitDefaultValue = true)]
        public string Android { get; set; }

        /// <summary>
        /// Web link
        /// </summary>
        /// <value>Web link</value>
        [DataMember(Name = "web", EmitDefaultValue = true)]
        public string Web { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class VTApiPlaneraResaWebV4ModelsJourneysPadamUrlsApiModel {\n");
            sb.Append("  Ios: ").Append(Ios).Append("\n");
            sb.Append("  Android: ").Append(Android).Append("\n");
            sb.Append("  Web: ").Append(Web).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as VTApiPlaneraResaWebV4ModelsJourneysPadamUrlsApiModel);
        }

        /// <summary>
        /// Returns true if VTApiPlaneraResaWebV4ModelsJourneysPadamUrlsApiModel instances are equal
        /// </summary>
        /// <param name="input">Instance of VTApiPlaneraResaWebV4ModelsJourneysPadamUrlsApiModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(VTApiPlaneraResaWebV4ModelsJourneysPadamUrlsApiModel input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Ios == input.Ios ||
                    (this.Ios != null &&
                    this.Ios.Equals(input.Ios))
                ) && 
                (
                    this.Android == input.Android ||
                    (this.Android != null &&
                    this.Android.Equals(input.Android))
                ) && 
                (
                    this.Web == input.Web ||
                    (this.Web != null &&
                    this.Web.Equals(input.Web))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Ios != null)
                {
                    hashCode = (hashCode * 59) + this.Ios.GetHashCode();
                }
                if (this.Android != null)
                {
                    hashCode = (hashCode * 59) + this.Android.GetHashCode();
                }
                if (this.Web != null)
                {
                    hashCode = (hashCode * 59) + this.Web.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
